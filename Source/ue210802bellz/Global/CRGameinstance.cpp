////////////////////////////////////////////////////////////////////////////////
// ue210802bellz\Source\ue210802bellz\Global\CRGameinstance.cpp
////////////////////////////////////////////////////////////////////////////////
#include "CRGameinstance.h"

////////////////////////////////////////////////////////////////////////////////
// Global variables
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// public UFUNCTION() FString UCRGameinstance::GetStringForTestingBook()
////////////////////////////////////////////////////////////////////////////////
FString UCRGameinstance::GetStringForTestingBook() {
    return m_strForTestingBook;
} // GetStringForTestingBook()

////////////////////////////////////////////////////////////////////////////////
// public virtual void UCRGameinstance::Init()
////////////////////////////////////////////////////////////////////////////////
void UCRGameinstance::Init() {
    // Do the base-class-implementation
    UGameInstance::Init();

    // Set a string that indicates the game has now launched
    m_strForTestingBook = FString(TEXT("This was generated by UCRGameinstance::Init() and stored in the gameinstance member"));

    // Define a commandline-variable
    IConsoleManager::Get().RegisterConsoleVariable(TEXT("giCommandlineCountThrust"), 0, TEXT("The number of times that a thrust inputaction has been started"), ECVF_Scalability | ECVF_RenderThreadSafe);
    IConsoleVariable* poCommandlineCountThrust = IConsoleManager::Get().FindConsoleVariable(TEXT("giCommandlineCountThrust"));
    poCommandlineCountThrust->Set(0);
    return;
} // Init()
